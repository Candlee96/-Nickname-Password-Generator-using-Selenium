import threading
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import random
import string
from selenium.webdriver.support.ui import Select
from concurrent.futures import ThreadPoolExecutor

def generate_password(length=random.randint(8, 10)):
    return ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(length))

def website_thread(char_length=12):
    while True:
        driver = None
        try:
            driver = webdriver.Chrome()
            driver.get("https://mynickname.com/ru/generate")
            
            select = Select(WebDriverWait(driver, 10).until(
                EC.presence_of_element_located((By.NAME, "charcount"))
            ))
            select.select_by_value(str(char_length))
            
            generate_button = WebDriverWait(driver, 10).until(
                EC.element_to_be_clickable((By.ID, "generate"))
            )
            
            while True:
                try:
                    generate_button.click()
                    time.sleep(0.5)
                    
                    nickname = driver.find_element(By.ID, "nickname").get_attribute("value")
                    
                    with open(r'UR PATH TO TEXT FILE', 'a', encoding='utf-8') as f:
                        f.write(f"{nickname}:{generate_password()}\n")
                        
                    print(f"Saved: {nickname}:{generate_password()}")
                    time.sleep(1)
                    
                except Exception as e:
                    print(f"Error working with elements: {e}")
                    break
                    
        except Exception as e:
            print(f"Error in website thread: {e}")
            if driver:
                try:
                    driver.quit()
                except:
                    pass
            time.sleep(3)

def main():
    with ThreadPoolExecutor(max_workers=4) as executor:
        lengths = [8, 10, 12, 14]
        futures = [executor.submit(website_thread, length) for length in lengths]
        
        try:
            while True:
                time.sleep(1)
        except KeyboardInterrupt:
            print("Program terminated")

if __name__ == "__main__":
    main()
